{"version":3,"sources":["components/SkillScreen.js","components/ui/UserScreen.js","hook/useFetch.js","TorreApp.js","index.js"],"names":["SkillScreen","name","data","handleCloseSkill","refData","useRef","current","strengths","filter","skill","proficiency","recommendations","type","iconSkill","className","size","color","cursor","onClick","document","querySelector","innerHTML","getIconSkill","viewBox","d","UserScreen","useState","skillActived","setSkillActived","skillName","setSkillName","searchActived","setSearchActived","userChange","setUserChange","inputSearch","setInputSearch","expertLength","proficientLength","noviceLength","experienceLength","url","loading","error","state","setState","useEffect","fetch","then","resp","json","useFetch","handleClickSkill","target","handleSubmit","e","preventDefault","i","length","style","display","onSubmit","placeholder","autoComplete","value","onChange","backgroundImage","person","picture","map","id","TorreApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5bbe1c6c.chunk.js","sourcesContent":["import React, { useRef } from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\n\r\nexport const SkillScreen = ({name, data, handleCloseSkill}) => {\r\n\r\n    const refData = useRef([]);\r\n    refData.current = data.strengths.filter( skill => skill.name === name)\r\n    const {proficiency, recommendations} = refData.current[0]\r\n    const type = proficiency;\r\n    const iconSkill = {\r\n        expert: '<span className=\"skill__icon-skill\"><svg viewBox=\"0 0 24 25\"><path d=\"M16.5,5.5A2,2 0 0,0 18.5,3.5A2,2 0 0,0 16.5,1.5A2,2 0 0,0 14.5,3.5A2,2 0 0,0 16.5,5.5M12.9,19.4L13.9,15L16,17V23H18V15.5L15.9,13.5L16.5,10.5C17.89,12.09 19.89,13 22,13V11C20.24,11.03 18.6,10.11 17.7,8.6L16.7,7C16.34,6.4 15.7,6 15,6C14.7,6 14.5,6.1 14.2,6.1L9,8.3V13H11V9.6L12.8,8.9L11.2,17L6.3,16L5.9,18L12.9,19.4M4,9A1,1 0 0,1 3,8A1,1 0 0,1 4,7H7V9H4M5,5A1,1 0 0,1 4,4A1,1 0 0,1 5,3H10V5H5M3,13A1,1 0 0,1 2,12A1,1 0 0,1 3,11H7V13H3Z\"></path></svg></span>',\r\n        proficient: '<span className=\"skill__icon-skill\"><svg viewBox=\"0 0 24 25\"><path d=\"M14.12,10H19V8.2H15.38L13.38,4.87C13.08,4.37 12.54,4.03 11.92,4.03C11.74,4.03 11.58,4.06 11.42,4.11L6,5.8V11H7.8V7.33L9.91,6.67L6,22H7.8L10.67,13.89L13,17V22H14.8V15.59L12.31,11.05L13.04,8.18M14,3.8C15,3.8 15.8,3 15.8,2C15.8,1 15,0.2 14,0.2C13,0.2 12.2,1 12.2,2C12.2,3 13,3.8 14,3.8Z\"></path></svg></span>',\r\n        novice: '<span className=\"skill__icon-skill\"><svg viewBox=\"0 0 24 25\"><path d=\"M14.12,10H19V8.2H15.38L13.38,4.87C13.08,4.37 12.54,4.03 11.92,4.03C11.74,4.03 11.58,4.06 11.42,4.11L6,5.8V11H7.8V7.33L9.91,6.67L6,22H7.8L10.67,13.89L13,17V22H14.8V15.59L12.31,11.05L13.04,8.18M14,3.8C15,3.8 15.8,3 15.8,2C15.8,1 15,0.2 14,0.2C13,0.2 12.2,1 12.2,2C12.2,3 13,3.8 14,3.8Z\"></path></svg></span>',\r\n        noexperience: '<span className=\"skill__icon-skill\"><svg viewBox=\"0 0 24 25\"><path d=\"M18.5,4A2.5,2.5 0 0,1 21,6.5A2.5,2.5 0 0,1 18.5,9A2.5,2.5 0 0,1 16,6.5A2.5,2.5 0 0,1 18.5,4M4.5,20A1.5,1.5 0 0,1 3,18.5A1.5,1.5 0 0,1 4.5,17H11.5A1.5,1.5 0 0,1 13,18.5A1.5,1.5 0 0,1 11.5,20H4.5M16.09,19L14.69,15H11L6.75,10.75C6.75,10.75 9,8.25 12.5,8.25C15.5,8.25 15.85,9.25 16.06,9.87L18.92,18C19.2,18.78 18.78,19.64 18,19.92C17.22,20.19 16.36,19.78 16.09,19Z\"></path></svg></span>' \r\n    }\r\n    \r\n    const getIconSkill = (type) => {\r\n        switch (type) {\r\n            case 'expert':\r\n                return iconSkill.expert;\r\n            case 'proficient':\r\n                return iconSkill.proficient;\r\n            case 'novice':\r\n                return iconSkill.novice;\r\n            case 'no-experience-interested':\r\n                return iconSkill.noexperience\r\n            default:\r\n                return iconSkill.expert; \r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='skill__cointainer animate__animated animate__fadeInRight'>\r\n            <div className='skill__header'>\r\n                <AiOutlineClose size={'30'} color='#E9EAEA' cursor='pointer' onClick={handleCloseSkill}/>\r\n                <h2>{name}</h2>\r\n            </div>\r\n            <div className=\"skill__proficiency-container\">\r\n                {\r\n                    document.querySelector(\".skill__img-title\")\r\n                    ? \r\n                    <div className='skill__img-title'>\r\n                        <p>Proficiency: </p>\r\n                        {document.querySelector(\".skill__img-title\").innerHTML=getIconSkill(type)}\r\n                    </div>\r\n                    :\r\n                    <div className='skill__img-title'>\r\n                        <p>Proficiency: </p>\r\n                        <span className=\"skill__icon-skill\"><svg viewBox=\"0 0 24 25\"><path d=\"M16.5,5.5A2,2 0 0,0 18.5,3.5A2,2 0 0,0 16.5,1.5A2,2 0 0,0 14.5,3.5A2,2 0 0,0 16.5,5.5M12.9,19.4L13.9,15L16,17V23H18V15.5L15.9,13.5L16.5,10.5C17.89,12.09 19.89,13 22,13V11C20.24,11.03 18.6,10.11 17.7,8.6L16.7,7C16.34,6.4 15.7,6 15,6C14.7,6 14.5,6.1 14.2,6.1L9,8.3V13H11V9.6L12.8,8.9L11.2,17L6.3,16L5.9,18L12.9,19.4M4,9A1,1 0 0,1 3,8A1,1 0 0,1 4,7H7V9H4M5,5A1,1 0 0,1 4,4A1,1 0 0,1 5,3H10V5H5M3,13A1,1 0 0,1 2,12A1,1 0 0,1 3,11H7V13H3Z\"></path></svg></span>\r\n                        <p className='skill_p-types'>{type === 'expert'? 'Expert' \r\n                            :(type === 'proficient')? 'Proficient'\r\n                            :(type === 'novice')? 'Novice'\r\n                            :(type === 'no-experience-interested') && 'No experience, but interested'\r\n                        }</p>\r\n                    </div>\r\n                }\r\n                    <p>Recommendations:  {recommendations}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FaBars, FaSearch } from 'react-icons/fa';\r\nimport { useFetch } from '../../hook/useFetch';\r\nimport { SkillScreen } from '../SkillScreen';\r\n\r\nexport const UserScreen = () => {\r\n\r\n    const [skillActived, setSkillActived] = useState(false);\r\n    const [skillName, setSkillName] = useState(\"\");\r\n    const [searchActived, setSearchActived] = useState(false);\r\n    const [userChange, setUserChange] = useState('trianab659');\r\n    const [inputSearch, setInputSearch] = useState('');\r\n\r\n    let expertLength = 0;\r\n    let proficientLength = 0;\r\n    let noviceLength = 0;\r\n    let experienceLength = 0;\r\n\r\n    const {data, loading} = useFetch(`https://bio.torre.co/api/bios/${userChange}`);\r\n    \r\n    const handleClickSkill = ({target}) => {\r\n        setSkillName(target.innerHTML);\r\n        setSkillActived(true);\r\n    }\r\n    const handleCloseSkill = () => {\r\n        setSkillActived(false);\r\n    }\r\n    const handleClickUser = () => {\r\n        setSearchActived(!searchActived);\r\n    }\r\n    const handleInputChange = ({target}) => {\r\n        setInputSearch(target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setUserChange(inputSearch);\r\n        setSearchActived(!searchActived);\r\n    }\r\n    \r\n    if(loading){\r\n        return(\r\n            <h1 className='user_wait'>wait...</h1>\r\n        )\r\n    }\r\n    for (let i = 0; i < data.strengths.length; i++) {\r\n        if(data.strengths[i].proficiency === 'expert'){\r\n            expertLength += 1;\r\n        } else if(data.strengths[i].proficiency === 'proficient'){\r\n            proficientLength += 1;\r\n        } else if(data.strengths[i].proficiency === 'novice'){\r\n            noviceLength += 1;\r\n        }else if(data.strengths[i].proficiency === 'no-experience-interested'){\r\n            experienceLength += 1;\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className='user__container'>\r\n                <div className='user__search-container animate__animated animate__fadeInDown' style={ searchActived? {display: 'flex'}:{display: 'none'}}>\r\n                    <form>\r\n                        <input\r\n                            onSubmit={handleSubmit}\r\n                            type='text'\r\n                            placeholder=' User'\r\n                            autoComplete='false'\r\n                            name='search'\r\n                            value={inputSearch}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </form>\r\n                    <FaSearch size='30' color='#A9A9AB' cursor='pointer' onClick={handleSubmit}/>\r\n                </div>\r\n                {\r\n                    searchActived &&\r\n                    <div className='user__blur'></div>\r\n                }\r\n                <div className='user__header-container'>\r\n                    <div className='user__container-icons-text'>\r\n                    <FaBars size='22' color='#A9A9AB' cursor='pointer'/>\r\n                    <h2 className='user__title'>torre<span>.co</span></h2>\r\n                    </div>\r\n\r\n                    <div className='user__container-icons-text'>\r\n                    <FaSearch size='22' color='#A9A9AB' cursor='pointer' onClick={handleClickUser}/>\r\n                    <h2 className='user__sign-in'>SIGN IN</h2>\r\n                    </div>\r\n                </div>\r\n                <div className='user__photo-name-container'>\r\n                    <div className='user__photo' style={{backgroundImage: `url(${data?.person.picture})`}}></div>\r\n                    <h2>{data?.person.name}</h2>\r\n                </div>\r\n                <div className='user__skills-container'>\r\n                    <p>Skills and interests:</p>\r\n                    <div >\r\n                        {\r\n                            expertLength > 0 &&\r\n                            <div className=\"user__each-type-container\">\r\n                                <div className='user__icon-text'>\r\n                                    <span className='user__icon-skill'><svg viewBox=\"0 0 24 25\"><path d=\"M16.5,5.5A2,2 0 0,0 18.5,3.5A2,2 0 0,0 16.5,1.5A2,2 0 0,0 14.5,3.5A2,2 0 0,0 16.5,5.5M12.9,19.4L13.9,15L16,17V23H18V15.5L15.9,13.5L16.5,10.5C17.89,12.09 19.89,13 22,13V11C20.24,11.03 18.6,10.11 17.7,8.6L16.7,7C16.34,6.4 15.7,6 15,6C14.7,6 14.5,6.1 14.2,6.1L9,8.3V13H11V9.6L12.8,8.9L11.2,17L6.3,16L5.9,18L12.9,19.4M4,9A1,1 0 0,1 3,8A1,1 0 0,1 4,7H7V9H4M5,5A1,1 0 0,1 4,4A1,1 0 0,1 5,3H10V5H5M3,13A1,1 0 0,1 2,12A1,1 0 0,1 3,11H7V13H3Z\"></path></svg></span>\r\n                                    <p>Expert</p>\r\n                                </div>\r\n                                <div className='user__type-of-skill-container'>\r\n                                    {\r\n                                        \r\n                                            data.strengths.filter( skill => skill.proficiency === 'expert').map(skill => {\r\n                                                return (\r\n                                                    <p key={skill.id} className='user__skill' onClick={handleClickSkill}>{skill.name}</p>\r\n                                                )\r\n                                            })    \r\n                                        \r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        {\r\n                            proficientLength > 0 &&\r\n                            <div className=\"user__each-type-container\">\r\n                                <div className='user__icon-text'>\r\n                                    <span className='user__icon-skill'><svg viewBox=\"0 0 24 25\"><path d=\"M13.5,5.5C14.59,5.5 15.5,4.58 15.5,3.5C15.5,2.38 14.59,1.5 13.5,1.5C12.39,1.5 11.5,2.38 11.5,3.5C11.5,4.58 12.39,5.5 13.5,5.5M9.89,19.38L10.89,15L13,17V23H15V15.5L12.89,13.5L13.5,10.5C14.79,12 16.79,13 19,13V11C17.09,11 15.5,10 14.69,8.58L13.69,7C13.29,6.38 12.69,6 12,6C11.69,6 11.5,6.08 11.19,6.08L6,8.28V13H8V9.58L9.79,8.88L8.19,17L3.29,16L2.89,18L9.89,19.38Z\"></path></svg></span>\r\n                                    <p>Proficient</p>\r\n                                </div>\r\n                                <div className='user__type-of-skill-container'>\r\n                                    {\r\n                                        data?.strengths.filter( skill => skill.proficiency === 'proficient').map(skill => {\r\n                                            return (\r\n                                                <p key={skill.id} className='user__skill' onClick={handleClickSkill}>{skill.name}</p>\r\n                                            )\r\n                                        })    \r\n                                    \r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        {\r\n                            noviceLength > 0 &&\r\n                            <div className=\"user__each-type-container\">\r\n                                <div className='user__icon-text'>\r\n                                    <span className='user__icon-skill'><svg viewBox=\"0 0 24 25\"><path d=\"M14.12,10H19V8.2H15.38L13.38,4.87C13.08,4.37 12.54,4.03 11.92,4.03C11.74,4.03 11.58,4.06 11.42,4.11L6,5.8V11H7.8V7.33L9.91,6.67L6,22H7.8L10.67,13.89L13,17V22H14.8V15.59L12.31,11.05L13.04,8.18M14,3.8C15,3.8 15.8,3 15.8,2C15.8,1 15,0.2 14,0.2C13,0.2 12.2,1 12.2,2C12.2,3 13,3.8 14,3.8Z\"></path></svg></span>\r\n                                    <p>Novice</p>\r\n                                </div>\r\n                                <div className='user__type-of-skill-container'>\r\n                                    {\r\n                                        data?.strengths.filter( skill => skill.proficiency === 'novice').map(skill => {\r\n                                            return (\r\n                                                <p key={skill.id} className='user__skill' onClick={handleClickSkill}>{skill.name}</p>\r\n                                            )\r\n                                        })    \r\n                                    \r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        {\r\n                            experienceLength > 0 &&\r\n                            <div className=\"user__each-type-container\">\r\n                                <div className='user__icon-text'>\r\n                                    <span className='user__icon-skill'><svg viewBox=\"0 0 24 25\"><path d=\"M18.5,4A2.5,2.5 0 0,1 21,6.5A2.5,2.5 0 0,1 18.5,9A2.5,2.5 0 0,1 16,6.5A2.5,2.5 0 0,1 18.5,4M4.5,20A1.5,1.5 0 0,1 3,18.5A1.5,1.5 0 0,1 4.5,17H11.5A1.5,1.5 0 0,1 13,18.5A1.5,1.5 0 0,1 11.5,20H4.5M16.09,19L14.69,15H11L6.75,10.75C6.75,10.75 9,8.25 12.5,8.25C15.5,8.25 15.85,9.25 16.06,9.87L18.92,18C19.2,18.78 18.78,19.64 18,19.92C17.22,20.19 16.36,19.78 16.09,19Z\"></path></svg></span>\r\n                                    <p>No experience, but interested</p>\r\n                                </div>\r\n                                <div className='user__type-of-skill-container'>\r\n                                    {\r\n                                        data?.strengths.filter( skill => skill.proficiency === 'no-experience-interested').map(skill => {\r\n                                            return (\r\n                                                <p key={skill.id} className='user__skill' onClick={handleClickSkill}>{skill.name}</p>\r\n                                            )\r\n                                        })    \r\n                                    \r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            {\r\n                skillActived &&\r\n                <SkillScreen name={skillName} data={data} handleCloseSkill={handleCloseSkill}/>\r\n                \r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\n\r\nexport const useFetch = ( url ) => {\r\n\r\n    const [state, setState] = useState({ data:null, loading:true, error:null});\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setState({ data:null, loading:true, error:null})\r\n        \r\n        fetch(url)\r\n            .then( resp => resp.json())\r\n            .then( data => {\r\n\r\n                setState({\r\n                    loading: false,\r\n                    error: null,\r\n                    data\r\n                })\r\n\r\n            })\r\n\r\n    }, [url])\r\n\r\n    return state;\r\n}\r\n","import React from 'react'\r\nimport { UserScreen } from './components/ui/UserScreen'\r\n\r\nexport const TorreApp = () => {\r\n    return (\r\n        <div className='torre__container-app'>\r\n            <UserScreen />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TorreApp } from './TorreApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <TorreApp />,\n  document.getElementById('root')\n)"],"sourceRoot":""}